AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template to create 2 VPCs, 3 private subnets, 2 security groups,
  and 5 EC2 instances with dynamic configurations.

Parameters:
  VpcCIDR1:
    Type: String
    Description: CIDR block for VPC 1
    AllowedPattern: '^10\\.(?:[0-9]{1,3}\\.){2}[0-9]{1,3}/(2[1-8])$'
    ConstraintDescription: Must be a valid CIDR block from /21 to /28 in 10.x.x.x/ format.

  VpcCIDR2:
    Type: String
    Description: CIDR block for VPC 2
    AllowedPattern: '^10\\.(?:[0-9]{1,3}\\.){2}[0-9]{1,3}/(2[1-8])$'
    ConstraintDescription: Must be a valid CIDR block from /21 to /28 in 10.x.x.x/ format.

  PrivateSubnet1CIDR:
    Type: String
    Description: CIDR block for Private Subnet 1
    AllowedPattern: '^10\\.(?:[0-9]{1,3}\\.){2}[0-9]{1,3}/(2[3-8])$'
    ConstraintDescription: Must be a valid CIDR block from /23 to /28 in 10.x.x.x/ format.

  PrivateSubnet2CIDR:
    Type: String
    Description: CIDR block for Private Subnet 2
    AllowedPattern: '^10\\.(?:[0-9]{1,3}\\.){2}[0-9]{1,3}/(2[3-8])$'
    ConstraintDescription: Must be a valid CIDR block from /23 to /28 in 10.x.x.x/ format.

  PrivateSubnet3CIDR:
    Type: String
    Description: CIDR block for Private Subnet 3
    AllowedPattern: '^10\\.(?:[0-9]{1,3}\\.){2}[0-9]{1,3}/(2[3-8])$'
    ConstraintDescription: Must be a valid CIDR block from /23 to /28 in 10.x.x.x/ format.

  ImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for launching the EC2 instances

  InstanceType:
    Type: String
    Description: EC2 instance type for all instances
    Default: t3.medium
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    ConstraintDescription: Must be a valid EC2 instance type.

Resources:
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR1
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC-1

  VPC2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR2
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC-2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet-2

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC2
      CidrBlock: !Ref PrivateSubnet3CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet-3

  SecurityGroup1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group 1
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: SG-1

  SecurityGroup2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group 2
      VpcId: !Ref VPC2
      Tags:
        - Key: Name
          Value: SG-2

  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet1
      ImageId: !Ref ImageId
      SecurityGroupIds:
        - !Ref SecurityGroup1
      Tags:
        - Key: Name
          Value: EC2-Instance-1

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet2
      ImageId: !Ref ImageId
      SecurityGroupIds:
        - !Ref SecurityGroup1
      Tags:
        - Key: Name
          Value: EC2-Instance-2

  EC2Instance3:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet3
      ImageId: !Ref ImageId
      SecurityGroupIds:
        - !Ref SecurityGroup2
      Tags:
        - Key: Name
          Value: EC2-Instance-3

  EC2Instance4:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet1
      ImageId: !Ref ImageId
      SecurityGroupIds:
        - !Ref SecurityGroup1
      Tags:
        - Key: Name
          Value: EC2-Instance-4

  EC2Instance5:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet3
      ImageId: !Ref ImageId
      SecurityGroupIds:
        - !Ref SecurityGroup2
      Tags:
        - Key: Name
          Value: EC2-Instance-5

Outputs:
  VPC1Id:
    Description: ID of VPC 1
    Value: !Ref VPC1

  VPC2Id:
    Description: ID of VPC 2
    Value: !Ref VPC2

  PrivateSubnet1Id:
    Description: ID of Private Subnet 1
    Value: !Ref PrivateSubnet1

  PrivateSubnet2Id:
    Description: ID of Private Subnet 2
    Value: !Ref PrivateSubnet2

  PrivateSubnet3Id:
    Description: ID of Private Subnet 3
    Value: !Ref PrivateSubnet3

  SecurityGroup1Id:
    Description: ID of Security Group 1
    Value: !Ref SecurityGroup1

  SecurityGroup2Id:
    Description: ID of Security Group 2
    Value: !Ref SecurityGroup2

  EC2Instance1Id:
    Description: ID of EC2 Instance 1
    Value: !Ref EC2Instance1

  EC2Instance2Id:
    Description: ID of EC2 Instance 2
    Value: !Ref EC2Instance2

  EC2Instance3Id:
    Description: ID of EC2 Instance 3
    Value: !Ref EC2Instance3

  EC2Instance4Id:
    Description: ID of EC2 Instance 4
    Value: !Ref EC2Instance4

  EC2Instance5Id:
    Description: ID of EC2 Instance 5
    Value: !Ref EC2Instance5