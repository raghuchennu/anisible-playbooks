AWSTemplateFormatVersion: '2010-09-09'
Description: >
  EC2 Image Builder pipeline for Windows Server 2022 Golden AMI with
  custom softwares which includes SSM Agent, AWS CLI, datadog, cloudwatch and Qualys Agent installation

Parameters:
  BaseAMI:
    Type: String
    Description: Base AMI ID for Windows (e.g., ami-xxxx for Windows Server 2022)

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID for infrastructure configuration

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID for the Golden Image builder instance
 
  TargetAccountIds:
    Type: CommaDelimitedList
    Description: List of Account IDs to share the Golden AMI with
  
  OSCreatedDate:
    Type: String
    Description: Data at which OS image is build

  CostCenter:
    Type: String
    Description: Data at which OS image is build

  OSVersion:
    Type: String
    Description: Data at which OS is build

  Environment:
    Type: String
    Description: Data at which environment is build

  Owner:
    Type: String
    Description: Data at which owner of the resource

  Project:
    Type: String
    Description: Name of the Project

  Application:
    Type: String
    Description: Name of the Application

  Compliance:
    Type: String
    Description: Specific Compliance requirements

  Releasedate:
    Type: String
    Description: OS released date

Resources:

  ImageBuilderRoleS:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Tesco-IMS-ImageBuilder-Rolee
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ImageBuilderRoleS
      Path: "/"
  EnableCloudInitAndFixTmp:
  Type: AWS::ImageBuilder::Component
  Properties:
    Name: enable-cloud-init-rhel-810
    Platform: Linux
    Version: 1.0.0
    Description: Fix for RHEL 8.10 EC2 Image Builder bootstrap failure
    ChangeDescription: Install cloud-init and remount /tmp with exec
    Data: |
      name: EnableCloudInitAndFixTmp
      description: Install and enable cloud-init, fix /tmp noexec issue
      schemaVersion: 1.0
      phases:
        - name: build
          steps:
            - name: InstallCloudInit
              action: ExecuteBash
              inputs:
                commands:
                  - yum install -y cloud-init
                  - systemctl enable cloud-init
                  - systemctl enable cloud-config
                  - systemctl enable cloud-final
                  - systemctl start cloud-init
            - name: FixTmpMount
              action: ExecuteBash
              inputs:
                commands:
                  - mount -o remount,exec /tmp
                  - chmod 1777 /tmp

  InstallAWSCLI:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: install-aws-cli
      Platform: Linux
      Version: 1.0.0
      Description: Installing AWS_CLI
      ChangeDescription: Installing AWS_CLI
      Data: |
        name: AWS_CLI
        description: Installing AWS CLI
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: AWS_CLI
                action: ExecuteBash
                inputs:
                  commands:
                    - sudo dnf install -y unzip
                    - sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    - sudo unzip awscliv2.zip
                    - sudo ./aws/install
  InstallSSMAgentComponents:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: InstallSSMAgent-rhel
      Platform: Linux
      Version: 1.0.0
      Description: Install SSM Agent
      ChangeDescription: Install Amazon SSM Agent
      Data: |
        name: InstallSSMAgent
        description: Install SSM Agent
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: InstallSSMAgent
                action: ExecuteBash
                inputs:
                  commands:
                    - sudo dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
                    - sudo systemctl enable amazon-ssm-agent
                    - sudo systemctl start amazon-ssm-agent
  RemediationScript:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: Remediation
      Platform: Linux
      Version: 1.0.0
      Description: Running Remediation script
      ChangeDescription: Running Remediation script
      Data: |
        name: Remediation
        description: Running Remediation
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: Remediation
                action: ExecuteBash
                inputs:
                  commands:
                    
                    - sudo dnf install dos2unix -y
                    - dos2unix /tmp/RedHat-Remidationscript.sh
                    - chmod +x /tmp/RedHat-Remidationscript.sh
                    - /tmp/RedHat-Remidationscript.sh

  InstallQualysAgentComponents:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: InstallQualysAgent-rhel
      Platform: Linux
      Version: 1.0.0
      Description: Install Qualys Cloud Agent
      ChangeDescription: Install Qualys Agent from S3
      Data: |
        name: InstallQualysAgent
        description: Install Qualys Cloud Agent
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: InstallQualysAgent
                action: ExecuteBash
                inputs:
                  
  InstallDatadogAgentComponents:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: install-datadog-agent-rhel
      Platform: Linux
      Version: 1.0.0
      Description: Install Datadog Agent
      ChangeDescription: Install Datadog Agent using MSI
      Data: |
        name: install-datadog-agent
        description: Install Datadog Agent
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: InstallDatadog
                action: ExecuteBash
                inputs:
                 
  ImageRecipes:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      Name: Tesco-IMS-GoldenImage-Rhel-Recipe-
      Version: 1.0.0
      ParentImage: !Ref BaseAMI
      Description: Windows Server 2022 Golden AMI with SSM, CLI, and Qualys
      Components:
        - ComponentArn: !Ref CloudInitComponent
        - ComponentArn: !Ref InstallSSMAgentComponents
        - ComponentArn: !Ref InstallAWSCLI
        - ComponentArn: !Ref InstallQualysAgentComponents
        - ComponentArn: !Ref InstallDatadogAgentComponents
        - ComponentArn: !Ref RemediationScript
        - ComponentArn: arn:aws:imagebuilder:eu-west-1:aws:component/amazon-cloudwatch-agent-linux/1.0.1/1
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 128
            VolumeType: gp3

  InfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Name: Tesco-IMS-GoldenImage-InfrastructureConfig-rhel
      InstanceProfileName: !Ref InstanceProfile
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupId
      TerminateInstanceOnFailure: true

  DistributionConfiguration:
    Type: AWS::ImageBuilder::DistributionConfiguration
    Properties:
      Name: Tesco-IMS-GoldenImage-DistributionConfig-rhel
      Description: Distribution config for Tesco Windows Golden Image
      Distributions:
        - Region: !Ref "AWS::Region"
          AmiDistributionConfiguration:
            Name: "Tesco-IMS-GoldenImage-Rhel-{{ imagebuilder:buildDate }}"
            TargetAccountIds: !Ref TargetAccountIds

  ImagePipeline:
    Type: AWS::ImageBuilder::ImagePipeline
    Properties:
      Name: Tesco-IMS-GoldenImage-rhel
      ImageRecipeArn: !Ref ImageRecipes
      InfrastructureConfigurationArn: !Ref InfrastructureConfiguration
      DistributionConfigurationArn: !Ref DistributionConfiguration
      Schedule:
        PipelineExecutionStartCondition: EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE
        ScheduleExpression: cron(0 9 ? * 2#3 *)
      Status: ENABLED
      Tags:
        OSCreatedDate: !Ref OSCreatedDate
        OSVersion: !Ref OSVersion
        Environment: !Ref Environment
        Owner: !Ref Owner
        Project: !Ref Project
        Application: !Ref Application
        Releasedate: !Ref Releasedate
        CostCenter: !Ref CostCenter

Outputs:
  PipelineName:
    Description: Name of the EC2 Image Builder pipeline
    Value: !Ref ImagePipeline
