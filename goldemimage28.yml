AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Golden AMI Pipeline for Windows Server using EC2 Image Builder

Parameters:
  BaseAMI:
    Type: String
    Description: Base AMI ID for Windows (e.g., ami-xxxxx)

  EnvironmentName:
    Type: String
    Description: Name of the environment (e.g., dev, prod)

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to SSH into the instances

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID for the instances

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID where instances will be launched

Resources:

  ImageBuilderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - imagebuilder.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSImageBuilderFullAccess
      RoleName: !Sub "${EnvironmentName}-GoldenImageBuilderRole"

  GoldenImageS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${EnvironmentName}-golden-image-bucket-${AWS::AccountId}-${AWS::Region}"

  PowerShellComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub "${EnvironmentName}-InstallPowerShell"
      Platform: Windows
      Version: 1.0.0
      Description: Install PowerShell Modules
      Data: |
        name: InstallPowerShellModules
        description: Install useful PowerShell modules
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: InstallModules
                action: ExecutePowerShell
                inputs:
                  commands:
                    - Install-PackageProvider -Name NuGet -Force
                    - Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted
                    - Install-Module -Name AWS.Tools.Installer -Force

  GoldenImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    DependsOn: ImageBuilderRole
    Properties:
      Name: !Sub "${EnvironmentName}-GoldenImageRecipe"
      Version: 1.0.0
      ParentImage: !Ref BaseAMI
      Components:
        - ComponentArn: !Ref PowerShellComponent
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
            VolumeType: gp2

  InfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Name: !Sub "${EnvironmentName}-GoldenInfraConfig"
      InstanceProfileName: !Ref ImageBuilderRole
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupId
      KeyPair: !Ref KeyName
      TerminateInstanceOnFailure: true

  GoldenImagePipeline:
    Type: AWS::ImageBuilder::ImagePipeline
    Properties:
      Name: !Sub "${EnvironmentName}-GoldenImagePipeline"
      ImageRecipeArn: !Ref GoldenImageRecipe
      InfrastructureConfigurationArn: !Ref InfrastructureConfiguration
      Schedule:
        PipelineExecutionStartCondition: EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE
        ScheduleExpression: "cron(0 0 * * ? *)" # Daily run at midnight UTC

Outputs:
  PipelineName:
    Description: Name of the Image Pipeline
    Value: !Ref GoldenImagePipeline

  BucketName:
    Description: Name of the S3 Bucket for storing artifacts
    Value: !Ref GoldenImageS3Bucket