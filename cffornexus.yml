AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VpcCIDR:
    Type: String
    Default: "10.0.0.0/21"
    AllowedPattern: '^10\.(?:[0-9]{1,3}\.){2}[0-9]{1,3}/(2[1-8])$'
    Description: The CIDR block for the VPC.

  PrivateSubnet1CIDR:
    Type: String
    Default: "10.0.1.0/24"
    Description: CIDR block for Private Subnet 1

  PrivateSubnet2CIDR:
    Type: String
    Default: "10.0.2.0/24"
    Description: CIDR block for Private Subnet 2

  PrivateSubnet3CIDR:
    Type: String
    Default: "10.0.3.0/24"
    Description: CIDR block for Private Subnet 3

  InstanceType:
    Type: String
    Default: "t3.medium"
    Description: EC2 instance type

  ImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for EC2 instances (e.g., Amazon Linux 2 or 2023)

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: DevOps-VPC

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnet-Jenkins

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnet-SonarQube

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet3CIDR
      AvailabilityZone: !Select [2, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnet-Nexus

  DevOpsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow DevOps app internal traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8081
          SourceSecurityGroupId: !Ref DevOpsSG
        - IpProtocol: tcp
          FromPort: 9000
          ToPort: 9000
          SourceSecurityGroupId: !Ref DevOpsSG
      Tags:
        - Key: Name
          Value: DevOpsSecurityGroup

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  JenkinsInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet1
      ImageId: !Ref ImageId
      SecurityGroupIds: [!Ref DevOpsSG]
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: Jenkins-Server
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install java-openjdk11 -y
          wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
          rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
          yum install jenkins -y
          systemctl enable jenkins
          systemctl start jenkins

  SonarQubeInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet2
      ImageId: !Ref ImageId
      SecurityGroupIds: [!Ref DevOpsSG]
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: SonarQube-Server
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install java-17-openjdk -y
          wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.4.1.88267.zip
          unzip sonarqube-10.4.1.88267.zip -d /opt/
          mv /opt/sonarqube-* /opt/sonarqube
          useradd sonar
          chown -R sonar:sonar /opt/sonarqube

  NexusInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet3
      ImageId: !Ref ImageId
      SecurityGroupIds: [!Ref DevOpsSG]
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: Nexus-Server
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install java-1.8.0-openjdk -y
          wget https://download.sonatype.com/nexus/3/latest-unix.tar.gz
          tar -xvzf latest-unix.tar.gz -C /opt
          mv /opt/nexus-* /opt/nexus
          useradd nexus
          chown -R nexus:nexus /opt/nexus

Outputs:
  JenkinsInstanceId:
    Description: Jenkins EC2 Instance ID
    Value: !Ref JenkinsInstance

  SonarQubeInstanceId:
    Description: SonarQube EC2 Instance ID
    Value: !Ref SonarQubeInstance

  NexusInstanceId:
    Description: Nexus EC2 Instance ID
    Value: !Ref NexusInstance